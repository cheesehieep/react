{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\pages\\\\views\\\\Admin\\\\EditCategory\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport categoryApi from '../../../../api/categoryApi';\n\nconst EditCategory = ({\n  categories,\n  onUpdate\n}) => {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [category, setCategory] = useState({});\n\n  const loadCategory = async () => {\n    const {\n      data\n    } = await categoryApi.get(id);\n    setCategory(data);\n  };\n\n  useEffect(() => {\n    loadCategory();\n  }, []);\n\n  const onHandleChange = e => {\n    setCategory({ ...category,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onHandleSubmit = data => {\n    onUpdate(id, data);\n    console.log(data); // history.push('/admin/categories');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"h3 mb-0 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Edit Category\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"name\",\n    value: category.name,\n    onChange: onHandleChange,\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"nameHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, errors.name && errors.name.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 76\n    }\n  }, \"This field is required\"), errors.name && errors.name.type === \"minLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 77\n    }\n  }, \"Min Length 6\"), errors.name && errors.name.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 77\n    }\n  }, \"Max Length 30\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nEditCategory.propTypes = {\n  products: PropTypes.array\n};\nexport default EditCategory;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/pages/views/Admin/EditCategory/index.js"],"names":["React","useState","useEffect","PropTypes","useParams","useHistory","useForm","categoryApi","EditCategory","categories","onUpdate","handleSubmit","register","errors","history","id","category","setCategory","loadCategory","data","get","onHandleChange","e","target","name","value","onHandleSubmit","console","log","required","minLength","maxLength","type","propTypes","products","array"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport categoryApi from '../../../../api/categoryApi'\r\n\r\nconst EditCategory = ({categories, onUpdate}) => {\r\n    const {handleSubmit, register, errors} = useForm();\r\n    let history = useHistory();\r\n    let {id} = useParams();\r\n\r\n    const [category, setCategory] = useState({})\r\n\r\n    const loadCategory = async () => {\r\n        const {data} = await categoryApi.get(id);\r\n        setCategory(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const onHandleChange = e => {\r\n        setCategory({...category, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const onHandleSubmit = (data) => {\r\n        onUpdate(id, data);\r\n        console.log(data)\r\n        // history.push('/admin/categories');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 class=\"h3 mb-0 text-gray-800\">Edit Category</h1>\r\n            <form onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\">\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"name\" \r\n                        value={category.name} \r\n                        onChange={onHandleChange}\r\n                        ref={register({\r\n                            required: true,\r\n                            minLength: 6,\r\n                            maxLength: 30\r\n                        })}\r\n                    />\r\n                    <small id=\"nameHelp\" className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Min Length 6</span>}\r\n                        {errors.name && errors.name.type === \"maxLength\" && <span>Max Length 30</span>}\r\n                    </small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nEditCategory.propTypes = {\r\n    products: PropTypes.array\r\n}\r\n\r\nexport default EditCategory\r\n"]},"metadata":{},"sourceType":"module"}