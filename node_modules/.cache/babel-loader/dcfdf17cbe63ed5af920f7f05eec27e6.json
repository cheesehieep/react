{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\nimport typeApi from './api/typeApi';\nimport postApi from './api/postApi';\nimport orderApi from './api/orderApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [carts, setCarts] = useState([]);\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []);\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateCategory = async (id, category) => {\n    try {\n      const {\n        data\n      } = await categoryApi.update(id, category);\n      setCategories([...categories], data);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadCategories = async () => {\n    try {\n      const {\n        data\n      } = await categoryApi.getAll();\n      setCategories(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemoveCategory = async id => {\n    try {\n      const {\n        data\n      } = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await productApi.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateProduct = async (id, product) => {\n    try {\n      const {\n        data\n      } = await productApi.update(id, product);\n      setProducts([...products], data);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadProducts = async () => {\n    try {\n      const {\n        data\n      } = await productApi.getAll();\n      setProducts(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemoveProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getTypes = async () => {\n      try {\n        const {\n          data\n        } = await typeApi.getAll();\n        setTypes(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getTypes();\n  }, []);\n\n  const onHandleAddType = async type => {\n    try {\n      const {\n        data\n      } = await typeApi.create(type);\n      setTypes([...types, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateType = async (id, type) => {\n    try {\n      const {\n        data\n      } = await typeApi.update(id, type);\n      setTypes([...types], data);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadTypes = async () => {\n    try {\n      const {\n        data\n      } = await typeApi.getAll();\n      setTypes(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemoveType = async id => {\n    try {\n      const {\n        data\n      } = await typeApi.remove(id);\n      const newTypes = types.filter(type => type.id !== data.id);\n      setTypes(newTypes);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {\n          data\n        } = await postApi.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getPosts();\n  }, []);\n\n  const onHandleAddPost = async post => {\n    try {\n      const {\n        data\n      } = await postApi.create(post);\n      setPosts([...posts, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdatePost = async (id, post) => {\n    try {\n      const {\n        data\n      } = await postApi.update(id, post);\n      setPosts([...posts], data);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadPosts = async () => {\n    try {\n      const {\n        data\n      } = await postApi.getAll();\n      setPosts(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemovePost = async id => {\n    try {\n      const {\n        data\n      } = await postApi.remove(id);\n      const newPosts = posts.filter(post => post.id !== data.id);\n      setPosts(newPosts);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleAddCart = data => {\n    const product = products.find(product => product.id === data.pro_id);\n    const productCart = {\n      id: carts.length == 0 ? 1 : carts.length + 1,\n      pro_id: product.id,\n      name: product.name,\n      image: product.image,\n      price: product.price,\n      quantity: data.quantity\n    };\n    carts.push(productCart);\n    localStorage.setItem('carts', JSON.stringify(carts));\n  };\n\n  const onHandelUpdateCart = (id, data) => {\n    const localCarts = JSON.parse(localStorage.getItem('carts'));\n  };\n\n  const onHandleRemoveCart = id => {\n    const newCarts = carts.filter(cart => cart.id !== id);\n    localStorage.setItem('carts', JSON.stringify(newCarts));\n    setCarts(newCarts);\n  };\n\n  const onHandleAddOrder = async order => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(order);\n      setOrders([...orders, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCategory: onHandleRemoveCategory,\n    onAddCategory: onHandleAddCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    products: products,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: onHandleUpdateProduct,\n    types: types,\n    onRemoveType: onHandleRemoveType,\n    onAddType: onHandleAddType,\n    onUpdateType: onHandleUpdateType,\n    posts: posts,\n    onRemovePost: onHandleRemovePost,\n    onAddPost: onHandleAddPost,\n    onUpdatePost: onHandleUpdatePost,\n    carts: carts,\n    onAddCart: onHandleAddCart,\n    onUpdateCart: onHandelUpdateCart,\n    onRemoveCart: onHandleRemoveCart,\n    onAddOrder: onHandleAddOrder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","categoryApi","productApi","typeApi","postApi","orderApi","App","categories","setCategories","products","setProducts","types","setTypes","posts","setPosts","carts","setCarts","orders","setOrders","getCategories","data","getAll","error","console","log","onHandleAddCategory","category","create","onHandleUpdateCategory","id","update","loadCategories","reverse","onHandleRemoveCategory","remove","newCategories","filter","getProducts","onHandleAddProduct","product","onHandleUpdateProduct","loadProducts","onHandleRemoveProduct","newProducts","getTypes","onHandleAddType","type","onHandleUpdateType","loadTypes","onHandleRemoveType","newTypes","getPosts","onHandleAddPost","post","onHandleUpdatePost","loadPosts","onHandleRemovePost","newPosts","onHandleAddCart","find","pro_id","productCart","length","name","image","price","quantity","push","localStorage","setItem","JSON","stringify","onHandelUpdateCart","localCarts","parse","getItem","onHandleRemoveCart","newCarts","cart","onHandleAddOrder","order"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,cAAM;AAACC,UAAAA;AAAD,YAAS,MAAMnB,WAAW,CAACoB,MAAZ,EAArB;AACAb,QAAAA,aAAa,CAACY,IAAD,CAAb;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAH,IAAAA,aAAa;AACd,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,mBAAmB,GAAG,MAAOC,QAAP,IAAoB;AAC9C,QAAI;AACF,YAAM;AAACN,QAAAA;AAAD,UAAS,MAAMnB,WAAW,CAAC0B,MAAZ,CAAmBD,QAAnB,CAArB;AACAlB,MAAAA,aAAa,CAAC,CACZ,GAAGD,UADS,EAEZa,IAFY,CAAD,CAAb;AAID,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAVD;;AAYA,QAAMM,sBAAsB,GAAG,OAAOC,EAAP,EAAWH,QAAX,KAAwB;AACrD,QAAI;AACF,YAAM;AAACN,QAAAA;AAAD,UAAS,MAAMnB,WAAW,CAAC6B,MAAZ,CAAmBD,EAAnB,EAAuBH,QAAvB,CAArB;AACAlB,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,CAAD,EAAkBa,IAAlB,CAAb;AACAW,MAAAA,cAAc;AACf,KAJD,CAIE,OAAOT,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GARD;;AAUA,QAAMS,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAM;AAACX,QAAAA;AAAD,UAAS,MAAMnB,WAAW,CAACoB,MAAZ,EAArB;AACAb,MAAAA,aAAa,CAACY,IAAI,CAACY,OAAL,EAAD,CAAb;AACD,KAHD,CAGE,OAAOV,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAPD;;AASA,QAAMW,sBAAsB,GAAG,MAAOJ,EAAP,IAAc;AAC3C,QAAI;AACF,YAAM;AAACT,QAAAA;AAAD,UAAS,MAAMnB,WAAW,CAACiC,MAAZ,CAAmBL,EAAnB,CAArB;AACA,YAAMM,aAAa,GAAG5B,UAAU,CAAC6B,MAAX,CAAkBV,QAAQ,IAAIA,QAAQ,CAACG,EAAT,KAAgBT,IAAI,CAACS,EAAnD,CAAtB;AACArB,MAAAA,aAAa,CAAC2B,aAAD,CAAb;AACAJ,MAAAA,cAAc;AACf,KALD,CAKE,OAAOT,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GATD;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsC,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAACjB,UAAAA;AAAD,YAAS,MAAMlB,UAAU,CAACmB,MAAX,EAArB;AACAX,QAAAA,WAAW,CAACU,IAAD,CAAX;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAe,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AAC5C,QAAI;AACF,YAAM;AAACnB,QAAAA;AAAD,UAAS,MAAMlB,UAAU,CAACyB,MAAX,CAAkBY,OAAlB,CAArB;AACA7B,MAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVW,IAFU,CAAD,CAAX;AAID,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAVD;;AAYA,QAAMkB,qBAAqB,GAAG,OAAOX,EAAP,EAAWU,OAAX,KAAuB;AACnD,QAAI;AACF,YAAM;AAACnB,QAAAA;AAAD,UAAS,MAAMlB,UAAU,CAAC4B,MAAX,CAAkBD,EAAlB,EAAsBU,OAAtB,CAArB;AACA7B,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,EAAgBW,IAAhB,CAAX;AACAqB,MAAAA,YAAY;AACb,KAJD,CAIE,OAAOnB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GARD;;AAUA,QAAMmB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAM;AAACrB,QAAAA;AAAD,UAAS,MAAMlB,UAAU,CAACmB,MAAX,EAArB;AACAX,MAAAA,WAAW,CAACU,IAAI,CAACY,OAAL,EAAD,CAAX;AACD,KAHD,CAGE,OAAOV,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAPD;;AASA,QAAMoB,qBAAqB,GAAG,MAAOb,EAAP,IAAc;AAC1C,QAAI;AACF,YAAM;AAACT,QAAAA;AAAD,UAAS,MAAMlB,UAAU,CAACgC,MAAX,CAAkBL,EAAlB,CAArB;AACA,YAAMc,WAAW,GAAGlC,QAAQ,CAAC2B,MAAT,CAAgBG,OAAO,IAAIA,OAAO,CAACV,EAAR,KAAeT,IAAI,CAACS,EAA/C,CAApB;AACAnB,MAAAA,WAAW,CAACiC,WAAD,CAAX;AACAF,MAAAA,YAAY;AACb,KALD,CAKE,OAAOnB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GATD;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6C,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAM;AAACxB,UAAAA;AAAD,YAAS,MAAMjB,OAAO,CAACkB,MAAR,EAArB;AACAT,QAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAsB,IAAAA,QAAQ;AACT,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,eAAe,GAAG,MAAOC,IAAP,IAAgB;AACtC,QAAI;AACF,YAAM;AAAC1B,QAAAA;AAAD,UAAS,MAAMjB,OAAO,CAACwB,MAAR,CAAemB,IAAf,CAArB;AACAlC,MAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEPS,IAFO,CAAD,CAAR;AAID,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAVD;;AAYA,QAAMyB,kBAAkB,GAAG,OAAOlB,EAAP,EAAWiB,IAAX,KAAoB;AAC7C,QAAI;AACF,YAAM;AAAC1B,QAAAA;AAAD,UAAS,MAAMjB,OAAO,CAAC2B,MAAR,CAAeD,EAAf,EAAmBiB,IAAnB,CAArB;AACAlC,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,EAAaS,IAAb,CAAR;AACA4B,MAAAA,SAAS;AACV,KAJD,CAIE,OAAO1B,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GARD;;AAUA,QAAM0B,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAM;AAAC5B,QAAAA;AAAD,UAAS,MAAMjB,OAAO,CAACkB,MAAR,EAArB;AACAT,MAAAA,QAAQ,CAACQ,IAAI,CAACY,OAAL,EAAD,CAAR;AACD,KAHD,CAGE,OAAOV,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAPD;;AASA,QAAM2B,kBAAkB,GAAG,MAAOpB,EAAP,IAAc;AACvC,QAAI;AACF,YAAM;AAACT,QAAAA;AAAD,UAAS,MAAMjB,OAAO,CAAC+B,MAAR,CAAeL,EAAf,CAArB;AACA,YAAMqB,QAAQ,GAAGvC,KAAK,CAACyB,MAAN,CAAaU,IAAI,IAAIA,IAAI,CAACjB,EAAL,KAAYT,IAAI,CAACS,EAAtC,CAAjB;AACAjB,MAAAA,QAAQ,CAACsC,QAAD,CAAR;AACAF,MAAAA,SAAS;AACV,KALD,CAKE,OAAO1B,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GATD;;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoD,QAAQ,GAAG,YAAY;AAC3B,UAAI;AACF,cAAM;AAAC/B,UAAAA;AAAD,YAAS,MAAMhB,OAAO,CAACiB,MAAR,EAArB;AACAP,QAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQA6B,IAAAA,QAAQ;AACT,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,eAAe,GAAG,MAAOC,IAAP,IAAgB;AACtC,QAAI;AACF,YAAM;AAACjC,QAAAA;AAAD,UAAS,MAAMhB,OAAO,CAACuB,MAAR,CAAe0B,IAAf,CAArB;AACAvC,MAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEPO,IAFO,CAAD,CAAR;AAID,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAVD;;AAYA,QAAMgC,kBAAkB,GAAG,OAAOzB,EAAP,EAAWwB,IAAX,KAAoB;AAC7C,QAAI;AACF,YAAM;AAACjC,QAAAA;AAAD,UAAS,MAAMhB,OAAO,CAAC0B,MAAR,CAAeD,EAAf,EAAmBwB,IAAnB,CAArB;AACAvC,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,EAAaO,IAAb,CAAR;AACAmC,MAAAA,SAAS;AACV,KAJD,CAIE,OAAOjC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GARD;;AAUA,QAAMiC,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAM;AAACnC,QAAAA;AAAD,UAAS,MAAMhB,OAAO,CAACiB,MAAR,EAArB;AACAP,MAAAA,QAAQ,CAACM,IAAI,CAACY,OAAL,EAAD,CAAR;AACD,KAHD,CAGE,OAAOV,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAPD;;AASA,QAAMkC,kBAAkB,GAAG,MAAO3B,EAAP,IAAc;AACvC,QAAI;AACF,YAAM;AAACT,QAAAA;AAAD,UAAS,MAAMhB,OAAO,CAAC8B,MAAR,CAAeL,EAAf,CAArB;AACA,YAAM4B,QAAQ,GAAG5C,KAAK,CAACuB,MAAN,CAAaiB,IAAI,IAAIA,IAAI,CAACxB,EAAL,KAAYT,IAAI,CAACS,EAAtC,CAAjB;AACAf,MAAAA,QAAQ,CAAC2C,QAAD,CAAR;AACAF,MAAAA,SAAS;AACV,KALD,CAKE,OAAOjC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GATD;;AAWA,QAAMoC,eAAe,GAAItC,IAAD,IAAU;AAChC,UAAMmB,OAAO,GAAG9B,QAAQ,CAACkD,IAAT,CAAcpB,OAAO,IAAIA,OAAO,CAACV,EAAR,KAAeT,IAAI,CAACwC,MAA7C,CAAhB;AACA,UAAMC,WAAW,GAAG;AAClBhC,MAAAA,EAAE,EAAGd,KAAK,CAAC+C,MAAN,IAAgB,CAAhB,GAAoB,CAApB,GAAwB/C,KAAK,CAAC+C,MAAN,GAAe,CAD1B;AAElBF,MAAAA,MAAM,EAAErB,OAAO,CAACV,EAFE;AAGlBkC,MAAAA,IAAI,EAAExB,OAAO,CAACwB,IAHI;AAIlBC,MAAAA,KAAK,EAAEzB,OAAO,CAACyB,KAJG;AAKlBC,MAAAA,KAAK,EAAE1B,OAAO,CAAC0B,KALG;AAMlBC,MAAAA,QAAQ,EAAE9C,IAAI,CAAC8C;AANG,KAApB;AAQAnD,IAAAA,KAAK,CAACoD,IAAN,CAAWN,WAAX;AACAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAexD,KAAf,CAA9B;AACD,GAZD;;AAcA,QAAMyD,kBAAkB,GAAG,CAAC3C,EAAD,EAAKT,IAAL,KAAc;AACvC,UAAMqD,UAAU,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAX,CAAnB;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAI/C,EAAD,IAAQ;AACjC,UAAMgD,QAAQ,GAAG9D,KAAK,CAACqB,MAAN,CAAa0C,IAAI,IAAIA,IAAI,CAACjD,EAAL,KAAYA,EAAjC,CAAjB;AACAuC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeM,QAAf,CAA9B;AACA7D,IAAAA,QAAQ,CAAC6D,QAAD,CAAR;AACD,GAJD;;AAMA,QAAME,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxC,QAAI;AACF,YAAM;AAAC5D,QAAAA;AAAD,UAAS,MAAMnB,WAAW,CAAC0B,MAAZ,CAAmBqD,KAAnB,CAArB;AACA9D,MAAAA,SAAS,CAAC,CACR,GAAGD,MADK,EAERG,IAFQ,CAAD,CAAT;AAID,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAEf,UADd;AAEE,IAAA,gBAAgB,EAAE0B,sBAFpB;AAGE,IAAA,aAAa,EAAER,mBAHjB;AAIE,IAAA,gBAAgB,EAAEG,sBAJpB;AAME,IAAA,QAAQ,EAAEnB,QANZ;AAOE,IAAA,eAAe,EAAEiC,qBAPnB;AAQE,IAAA,YAAY,EAAEJ,kBARhB;AASE,IAAA,eAAe,EAAEE,qBATnB;AAWE,IAAA,KAAK,EAAE7B,KAXT;AAYE,IAAA,YAAY,EAAEsC,kBAZhB;AAaE,IAAA,SAAS,EAAEJ,eAbb;AAcE,IAAA,YAAY,EAAEE,kBAdhB;AAgBE,IAAA,KAAK,EAAElC,KAhBT;AAiBE,IAAA,YAAY,EAAE2C,kBAjBhB;AAkBE,IAAA,SAAS,EAAEJ,eAlBb;AAmBE,IAAA,YAAY,EAAEE,kBAnBhB;AAqBE,IAAA,KAAK,EAAEvC,KArBT;AAsBE,IAAA,SAAS,EAAE2C,eAtBb;AAuBE,IAAA,YAAY,EAAEc,kBAvBhB;AAwBE,IAAA,YAAY,EAAEI,kBAxBhB;AA0BE,IAAA,UAAU,EAAEG,gBA1Bd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiCD;;AACD,eAAezE,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport categoryApi from './api/categoryApi'\nimport productApi from './api/productApi'\nimport typeApi from './api/typeApi'\nimport postApi from './api/postApi'\nimport orderApi from './api/orderApi'\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [carts, setCarts] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {data} = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getCategories()\n  }, []);\n  \n  const onHandleAddCategory = async (category) => {\n    try {\n      const {data} = await categoryApi.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateCategory = async (id, category) => {\n    try {\n      const {data} = await categoryApi.update(id, category);\n      setCategories([...categories], data);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadCategories = async () => {\n    try {\n      const {data} = await categoryApi.getAll();\n      setCategories(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemoveCategory = async (id) => {\n    try {\n      const {data} = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await productApi.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateProduct = async (id, product) => {\n    try {\n      const {data} = await productApi.update(id, product);\n      setProducts([...products], data);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadProducts = async () => {\n    try {\n      const {data} = await productApi.getAll();\n      setProducts(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemoveProduct = async (id) => {\n    try {\n      const {data} = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getTypes = async () => {\n      try {\n        const {data} = await typeApi.getAll();\n        setTypes(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getTypes()\n  }, []);\n  \n  const onHandleAddType = async (type) => {\n    try {\n      const {data} = await typeApi.create(type);\n      setTypes([\n        ...types,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateType = async (id, type) => {\n    try {\n      const {data} = await typeApi.update(id, type);\n      setTypes([...types], data);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadTypes = async () => {\n    try {\n      const {data} = await typeApi.getAll();\n      setTypes(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemoveType = async (id) => {\n    try {\n      const {data} = await typeApi.remove(id);\n      const newTypes = types.filter(type => type.id !== data.id);\n      setTypes(newTypes);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {data} = await postApi.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getPosts()\n  }, []);\n  \n  const onHandleAddPost = async (post) => {\n    try {\n      const {data} = await postApi.create(post);\n      setPosts([\n        ...posts,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdatePost = async (id, post) => {\n    try {\n      const {data} = await postApi.update(id, post);\n      setPosts([...posts], data);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadPosts = async () => {\n    try {\n      const {data} = await postApi.getAll();\n      setPosts(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemovePost = async (id) => {\n    try {\n      const {data} = await postApi.remove(id);\n      const newPosts = posts.filter(post => post.id !== data.id);\n      setPosts(newPosts);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleAddCart = (data) => {\n    const product = products.find(product => product.id === data.pro_id);\n    const productCart = {\n      id : carts.length == 0 ? 1 : carts.length + 1,\n      pro_id: product.id,\n      name: product.name,\n      image: product.image,\n      price: product.price,\n      quantity: data.quantity\n    }\n    carts.push(productCart);\n    localStorage.setItem('carts', JSON.stringify(carts));\n  }\n\n  const onHandelUpdateCart = (id, data) => {\n    const localCarts = JSON.parse(localStorage.getItem('carts'));\n  }\n\n  const onHandleRemoveCart = (id) => {\n    const newCarts = carts.filter(cart => cart.id !== id);\n    localStorage.setItem('carts', JSON.stringify(newCarts));\n    setCarts(newCarts);\n  }\n\n  const onHandleAddOrder = async (order) => {\n    try {\n      const {data} = await categoryApi.create(order);\n      setOrders([\n        ...orders,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Routers \n        categories={categories} \n        onRemoveCategory={onHandleRemoveCategory} \n        onAddCategory={onHandleAddCategory} \n        onUpdateCategory={onHandleUpdateCategory}\n\n        products={products}\n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={onHandleUpdateProduct}\n\n        types={types}\n        onRemoveType={onHandleRemoveType} \n        onAddType={onHandleAddType} \n        onUpdateType={onHandleUpdateType}\n\n        posts={posts}\n        onRemovePost={onHandleRemovePost} \n        onAddPost={onHandleAddPost} \n        onUpdatePost={onHandleUpdatePost}\n\n        carts={carts}\n        onAddCart={onHandleAddCart}\n        onUpdateCart={onHandelUpdateCart}\n        onRemoveCart={onHandleRemoveCart}\n\n        onAddOrder={onHandleAddOrder}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}