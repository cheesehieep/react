{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  // const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []);\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateCategory = updateCategory => {\n    const newCategories = categories.map(category => category.id === updateCategory.id ? updateCategory : category // Nếu category.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('categories', JSON.stringify(newCategories));\n    setCategories(newCategories);\n  };\n\n  const onHandleRemoveCategory = async id => {\n    try {\n      const {\n        data\n      } = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleGetProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.get(id);\n      setProducts(data);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await productApi.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateProduct = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  const onHandleRemoveProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCategory: onHandleRemoveCategory,\n    onAddCategory: onHandleAddCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    products: products,\n    onGetProduct: onHandleGetProduct,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: onHandleUpdateProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","categoryApi","productApi","App","products","setProducts","getCategories","data","getAll","setCategories","error","console","log","onHandleAddCategory","category","create","categories","onHandleUpdateCategory","updateCategory","newCategories","map","id","localStorage","setItem","JSON","stringify","onHandleRemoveCategory","remove","filter","getProducts","onHandleGetProduct","get","onHandleAddProduct","product","onHandleUpdateProduct","updateProduct","newProducts","onHandleRemoveProduct"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  // const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {data} = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getCategories()\n  }, []);\n  \n  const onHandleAddCategory = async (category) => {\n    try {\n      const {data} = await categoryApi.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateCategory = (updateCategory) => {\n    const newCategories = categories.map(category => (\n      category.id === updateCategory.id ? updateCategory : category  // Nếu category.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('categories', JSON.stringify(newCategories))\n    setCategories(newCategories);\n  }\n\n  const onHandleRemoveCategory = async (id) => {\n    try {\n      const {data} = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n\n  const onHandleGetProduct = async (id) => {\n    try {\n      const {data} = await productApi.get(id);\n      setProducts(data);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await productApi.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateProduct = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', JSON.stringify(newProducts))\n    setProducts(newProducts);\n  }\n\n\n  const onHandleRemoveProduct = async (id) => {\n    try {\n      const {data} = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Routers \n        categories={categories} \n        onRemoveCategory={onHandleRemoveCategory} \n        onAddCategory={onHandleAddCategory} \n        onUpdateCategory={onHandleUpdateCategory}\n\n        products={products} \n        onGetProduct={onHandleGetProduct}\n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={onHandleUpdateProduct}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}