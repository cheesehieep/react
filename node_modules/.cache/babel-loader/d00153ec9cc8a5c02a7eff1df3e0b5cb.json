{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\pages\\\\views\\\\Admin\\\\EditProduct\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport productApi from '../../../../api/productApi';\n\nconst EditProduct = ({\n  categories,\n  products,\n  onUpdate\n}) => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm(); // const product = products.filter(product => product.id == id);\n  // const currentProduct = product[0];\n\n  const loadProduct = async () => {\n    const result = await axios.get(id);\n  };\n\n  useEffect(() => {\n    loadProduct();\n  }, []);\n\n  const onHandleSubmit = data => {\n    console.log(data); // onUpdate(data);\n    // history.push('/admin/products');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"h3 mb-0 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Edit Product\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"cate_id\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, categories.map(({\n    id,\n    name\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"name\",\n    value: \"\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 30\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"nameHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, errors.name && errors.name.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 76\n    }\n  }, \"This field is required\"), errors.name && errors.name.type === \"minLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 77\n    }\n  }, \"Min Length 6\"), errors.name && errors.name.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 77\n    }\n  }, \"Max Length 30\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"\",\n    width: \"100px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"image\",\n    value: \"\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /\\.(gif|jpg|jpeg|tiff|png|webp|bmp)$/i\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"imageHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, errors.image && errors.image.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 78\n    }\n  }, \"This field is required\"), errors.image && errors.image.type === \"pattern\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 77\n    }\n  }, \"Invalid image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"price\",\n    value: \"\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /\\d/\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"priceHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, errors.price && errors.price.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 78\n    }\n  }, \"This field is required\"), errors.price && errors.price.type === \"pattern\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 77\n    }\n  }, \"Invalid number\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nEditProduct.propTypes = {\n  products: PropTypes.array\n};\nexport default EditProduct;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/pages/views/Admin/EditProduct/index.js"],"names":["React","useState","useEffect","PropTypes","useParams","useHistory","useForm","axios","productApi","EditProduct","categories","products","onUpdate","id","history","handleSubmit","register","errors","loadProduct","result","get","onHandleSubmit","data","console","log","required","map","name","minLength","maxLength","type","pattern","value","image","price","propTypes","array"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport axios from 'axios'\r\nimport productApi from '../../../../api/productApi';\r\n\r\nconst EditProduct = ({categories, products, onUpdate}) => {\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const {handleSubmit, register, errors} = useForm();\r\n    // const product = products.filter(product => product.id == id);\r\n    // const currentProduct = product[0];\r\n\r\n    const loadProduct = async () => {\r\n        const result = await axios.get(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProduct();\r\n    }, []);\r\n\r\n    const onHandleSubmit = (data) => {\r\n        console.log(data)\r\n        // onUpdate(data);\r\n        // history.push('/admin/products');\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 class=\"h3 mb-0 text-gray-800\">Edit Product</h1>\r\n            <form onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\">\r\n                <div className=\"form-group\">\r\n                    <label>Category</label>\r\n                    <select className=\"form-control\" name=\"cate_id\" ref={register({required: true})}>\r\n                        {categories.map(({ id, name }) => (\r\n                            <option value={id}>{name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"name\" \r\n                        value=\"\"\r\n                        ref={register({\r\n                            required: true,\r\n                            minLength: 6,\r\n                            maxLength: 30\r\n                        })}\r\n                    />\r\n                    <small id=\"nameHelp\" className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Min Length 6</span>}\r\n                        {errors.name && errors.name.type === \"maxLength\" && <span>Max Length 30</span>}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Image</label><br />\r\n                    <img src=\"\" width=\"100px\"/>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"image\" \r\n                        value=\"\"\r\n                        ref={register({\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /\\.(gif|jpg|jpeg|tiff|png|webp|bmp)$/i\r\n                            }\r\n                        })}\r\n                    />\r\n                    <small id=\"imageHelp\" className=\"form-text text-danger\">\r\n                        {errors.image && errors.image.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.image && errors.image.type === \"pattern\" && <span>Invalid image</span>}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Price</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"price\" \r\n                        value=\"\"\r\n                        ref={register({\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /\\d/\r\n                            }\r\n                        })}\r\n                    />\r\n                    <small id=\"priceHelp\" className=\"form-text text-danger\">\r\n                        {errors.price && errors.price.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.price && errors.price.type === \"pattern\" && <span>Invalid number</span>}\r\n                    </small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nEditProduct.propTypes = {\r\n    products: PropTypes.array\r\n}\r\n\r\nexport default EditProduct\r\n"]},"metadata":{},"sourceType":"module"}