{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  // const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]); // useEffect(() => {\n  //   const getCategories = async () => {\n  //     try {\n  //       const {data} = await categoryApi.getAll();\n  //       setCategories(data);\n  //     } catch (error) {\n  //       console.log('Failed to request API: ', error)\n  //     }\n  //   }\n  //   getCategories()\n  // }, []);\n  // const onHandleAddCategory = async (category) => {\n  //   try {\n  //     const {data} = await categoryApi.create(category);\n  //     setCategories([\n  //       ...categories,\n  //       data\n  //     ])\n  //   } catch (error) {\n  //     console.log('Failed to request API: ', error)\n  //   }\n  // }\n  // const onHandleUpdateCategory = (updateCategory) => {\n  //   const newCategories = categories.map(category => (\n  //     category.id === updateCategory.id ? updateCategory : category  // Nếu category.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   ));\n  //   localStorage.setItem('categories', JSON.stringify(newCategories))\n  //   setCategories(newCategories);\n  // }\n  // const onHandleRemoveCategory = async (id) => {\n  //   try {\n  //     const {data} = await categoryApi.remove(id);\n  //     const newCategories = categories.filter(category => category.id !== data.id);\n  //     setCategories(newCategories);\n  //   } catch (error) {\n  //     console.log('Failed to request API: ', error)\n  //   }\n  // }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleGetProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.get(id);\n      setProducts(data);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await productApi.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateProduct = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  const onHandleRemoveProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCategory: onHandleRemoveCategory,\n    onAddCategory: onHandleAddCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    products: products,\n    onGetProduct: onHandleGetProduct,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: onHandleUpdateProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","categoryApi","productApi","App","products","setProducts","getProducts","data","getAll","error","console","log","onHandleGetProduct","id","get","onHandleAddProduct","product","create","onHandleUpdateProduct","updateProduct","newProducts","map","localStorage","setItem","JSON","stringify","onHandleRemoveProduct","remove","filter","categories","onHandleRemoveCategory","onHandleAddCategory","onHandleUpdateCategory"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  // const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  // useEffect(() => {\n  //   const getCategories = async () => {\n  //     try {\n  //       const {data} = await categoryApi.getAll();\n  //       setCategories(data);\n  //     } catch (error) {\n  //       console.log('Failed to request API: ', error)\n  //     }\n  //   }\n  //   getCategories()\n  // }, []);\n  \n  // const onHandleAddCategory = async (category) => {\n  //   try {\n  //     const {data} = await categoryApi.create(category);\n  //     setCategories([\n  //       ...categories,\n  //       data\n  //     ])\n  //   } catch (error) {\n  //     console.log('Failed to request API: ', error)\n  //   }\n  // }\n\n  // const onHandleUpdateCategory = (updateCategory) => {\n  //   const newCategories = categories.map(category => (\n  //     category.id === updateCategory.id ? updateCategory : category  // Nếu category.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n  //   ));\n  //   localStorage.setItem('categories', JSON.stringify(newCategories))\n  //   setCategories(newCategories);\n  // }\n\n  // const onHandleRemoveCategory = async (id) => {\n  //   try {\n  //     const {data} = await categoryApi.remove(id);\n  //     const newCategories = categories.filter(category => category.id !== data.id);\n  //     setCategories(newCategories);\n  //   } catch (error) {\n  //     console.log('Failed to request API: ', error)\n  //   }\n  // }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n\n  const onHandleGetProduct = async (id) => {\n    try {\n      const {data} = await productApi.get(id);\n      setProducts(data);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await productApi.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateProduct = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', JSON.stringify(newProducts))\n    setProducts(newProducts);\n  }\n\n\n  const onHandleRemoveProduct = async (id) => {\n    try {\n      const {data} = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Routers \n        categories={categories} \n        onRemoveCategory={onHandleRemoveCategory} \n        onAddCategory={onHandleAddCategory} \n        onUpdateCategory={onHandleUpdateCategory}\n\n        products={products} \n        onGetProduct={onHandleGetProduct}\n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={onHandleUpdateProduct}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}