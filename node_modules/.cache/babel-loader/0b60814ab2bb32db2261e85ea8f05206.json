{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\pages\\\\views\\\\Admin\\\\AddProduct\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { storage } from '../../../../firebase';\n\nconst AddProduct = ({\n  categories,\n  onAdd\n}) => {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm();\n  let history = useHistory(); // const [valueInput, setValueInput] = useState({});\n  // const onHandleChange = (e) => {\n  //     const {name, value} = e.target;\n  //     setValueInput({\n  //         ...valueInput,\n  //         [name]: e.target.value\n  //     })\n  // }\n\n  const [valueEditor, setValueEditor] = useState('');\n  const [valueImage, setValueImage] = useState('');\n\n  const onHandleImageChange = e => {\n    if (e.target.files[0]) {\n      setValueImage(e.target.files[0]);\n    }\n  };\n\n  const onHandleEditorChange = (event, editor) => {\n    const data = editor.getData();\n    setValueEditor(data);\n  };\n\n  const onHandleSubmit = data => {\n    const uploadTask = storage.ref(`images/${valueImage.name}`).put(valueImage);\n    uploadTask.on(\"state_changed\", snapshot => {}, error => {\n      console.log(error);\n    }, () => {\n      storage.ref(\"images\").child(valueImage.name).getDownloadURL().then(url => {\n        const newData = Object.assign(data, {\n          'image': url\n        }, {\n          'content': valueEditor\n        });\n        onAdd(newData);\n        history.push(\"/admin/products\");\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"h3 mb-0 text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Add Product\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onHandleSubmit),\n    className: \"w-50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"cate_id\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, categories.map(({\n    id,\n    name\n  }) => /*#__PURE__*/React.createElement(\"option\", {\n    value: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"name\",\n    ref: register({\n      required: true,\n      minLength: 6,\n      maxLength: 30,\n      pattern: {\n        value: /^\\S/\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"nameHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, errors.name && errors.name.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 76\n    }\n  }, \"This field is required\"), errors.name && errors.name.type === \"minLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 77\n    }\n  }, \"Min Length 6\"), errors.name && errors.name.type === \"maxLength\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 77\n    }\n  }, \"Max Length 30\"), errors.name && errors.name.type === \"pattern\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 75\n    }\n  }, \"Invalid space\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    for: \"validatedCustomFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Choose file...\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    className: \"custom-file-input\",\n    onChange: onHandleImageChange,\n    ref: register({\n      required: true,\n      pattern: {\n        value: /\\.(gif|jpg|jpeg|tiff|png|webp|bmp)$/i\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"imageHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, errors.image && errors.image.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 78\n    }\n  }, \"This field is required\"), errors.image && errors.image.type === \"pattern\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 77\n    }\n  }, \"Invalid image\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Content\"), /*#__PURE__*/React.createElement(CKEditor, {\n    editor: ClassicEditor,\n    data: \"\",\n    onInit: editor => {// You can store the \"editor\" and use when it is needed.\n      // console.log( 'Editor is ready to use!', editor );\n    },\n    onChange: onHandleEditorChange // onBlur={ ( event, editor ) => {\n    //     console.log( 'Blur.', editor );\n    // } }\n    // onFocus={ ( event, editor ) => {\n    //     console.log( 'Focus.', editor );\n    // } }\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"price\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^\\d/\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    id: \"priceHelp\",\n    className: \"form-text text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, errors.price && errors.price.type === \"required\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 78\n    }\n  }, \"This field is required\"), errors.price && errors.price.type === \"pattern\" && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 77\n    }\n  }, \"Invalid number\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nAddProduct.propTypes = {\n  onAdd: PropTypes.func\n};\nexport default AddProduct;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/pages/views/Admin/AddProduct/index.js"],"names":["React","useState","PropTypes","useHistory","useForm","CKEditor","ClassicEditor","storage","AddProduct","categories","onAdd","handleSubmit","register","errors","history","valueEditor","setValueEditor","valueImage","setValueImage","onHandleImageChange","e","target","files","onHandleEditorChange","event","editor","data","getData","onHandleSubmit","uploadTask","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","newData","Object","assign","push","required","map","id","minLength","maxLength","pattern","value","type","image","price","propTypes","func"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useForm} from 'react-hook-form'\r\nimport CKEditor from '@ckeditor/ckeditor5-react'\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\r\nimport {storage} from '../../../../firebase'\r\n\r\nconst AddProduct = ({categories, onAdd}) => {\r\n    const {handleSubmit, register, errors} = useForm();\r\n    let history = useHistory();\r\n    // const [valueInput, setValueInput] = useState({});\r\n    // const onHandleChange = (e) => {\r\n    //     const {name, value} = e.target;\r\n    //     setValueInput({\r\n    //         ...valueInput,\r\n    //         [name]: e.target.value\r\n    //     })\r\n    // }\r\n\r\n    const [valueEditor, setValueEditor] = useState('');\r\n    const [valueImage, setValueImage] = useState('');\r\n\r\n    const onHandleImageChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setValueImage(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onHandleEditorChange = (event, editor) => {\r\n        const data = editor.getData();\r\n        setValueEditor(data);\r\n    }\r\n\r\n    const onHandleSubmit = (data) => {\r\n        const uploadTask = storage.ref(`images/${valueImage.name}`).put(valueImage);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {},\r\n            error => {console.log(error)},\r\n            () => {storage\r\n                .ref(\"images\")\r\n                .child(valueImage.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    const newData = Object.assign(data, {'image': url}, {'content': valueEditor});\r\n                    onAdd(newData);\r\n                    history.push(\"/admin/products\");\r\n                });\r\n            }\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 class=\"h3 mb-0 text-gray-800\">Add Product</h1>\r\n            <form onSubmit={handleSubmit(onHandleSubmit)} className=\"w-50\">\r\n                <div className=\"form-group\">\r\n                    <label>Category</label>\r\n                    <select className=\"form-control\" name=\"cate_id\" ref={register({required: true})}>\r\n                        {categories.map(({ id, name }) => (\r\n                            <option value={id}>{name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"name\"\r\n                        ref={register({\r\n                            required: true,\r\n                            minLength: 6,\r\n                            maxLength: 30,\r\n                            pattern: {\r\n                                value: /^\\S/\r\n                            }\r\n                        })}\r\n                    />\r\n                    <small id=\"nameHelp\" className=\"form-text text-danger\">\r\n                        {errors.name && errors.name.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.name && errors.name.type === \"minLength\" && <span>Min Length 6</span>}\r\n                        {errors.name && errors.name.type === \"maxLength\" && <span>Max Length 30</span>}\r\n                        {errors.name && errors.name.type === \"pattern\" && <span>Invalid space</span>}\r\n                    </small>\r\n                </div>\r\n                <label>Image</label>\r\n                <div className=\"custom-file mb-3\">\r\n                    <label className=\"custom-file-label\" for=\"validatedCustomFile\">Choose file...</label>\r\n                    <input \r\n                        type=\"file\"\r\n                        name=\"image\"\r\n                        className=\"custom-file-input\" \r\n                        onChange={onHandleImageChange}\r\n                        ref={register({\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /\\.(gif|jpg|jpeg|tiff|png|webp|bmp)$/i\r\n                            }\r\n                        })}\r\n                    />\r\n                    <small id=\"imageHelp\" className=\"form-text text-danger\">\r\n                        {errors.image && errors.image.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.image && errors.image.type === \"pattern\" && <span>Invalid image</span>}\r\n                    </small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Content</label>\r\n                    <CKEditor\r\n                        editor={ ClassicEditor }\r\n                        data=\"\"\r\n                        onInit={ editor => {\r\n                            // You can store the \"editor\" and use when it is needed.\r\n                            // console.log( 'Editor is ready to use!', editor );\r\n                        }}\r\n                        onChange={onHandleEditorChange}\r\n                        // onBlur={ ( event, editor ) => {\r\n                        //     console.log( 'Blur.', editor );\r\n                        // } }\r\n                        // onFocus={ ( event, editor ) => {\r\n                        //     console.log( 'Focus.', editor );\r\n                        // } }\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Price</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name=\"price\"\r\n                        ref={register({\r\n                            required: true,\r\n                            pattern: {\r\n                                value: /^\\d/\r\n                            }\r\n                        })}\r\n                    />\r\n                    <small id=\"priceHelp\" className=\"form-text text-danger\">\r\n                        {errors.price && errors.price.type === \"required\" && <span>This field is required</span>}\r\n                        {errors.price && errors.price.type === \"pattern\" && <span>Invalid number</span>}\r\n                    </small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddProduct.propTypes = {\r\n    onAdd: PropTypes.func\r\n}\r\n\r\nexport default AddProduct\r\n"]},"metadata":{},"sourceType":"module"}