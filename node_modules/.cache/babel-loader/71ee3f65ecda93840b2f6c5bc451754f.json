{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\nimport typeApi from './api/typeApi';\nimport postApi from './api/postApi';\nimport orderApi from './api/orderApi';\nimport orderDetailApi from './api/orderDetailApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [carts, setCarts] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [orderDetails, setOrderDetails] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []);\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateCategory = async (id, category) => {\n    try {\n      const {\n        data\n      } = await categoryApi.update(id, category);\n      setCategories([...categories], data);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadCategories = async () => {\n    try {\n      const {\n        data\n      } = await categoryApi.getAll();\n      setCategories(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemoveCategory = async id => {\n    try {\n      const {\n        data\n      } = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await productApi.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateProduct = async (id, product) => {\n    try {\n      const {\n        data\n      } = await productApi.update(id, product);\n      setProducts([...products], data);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadProducts = async () => {\n    try {\n      const {\n        data\n      } = await productApi.getAll();\n      setProducts(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemoveProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getTypes = async () => {\n      try {\n        const {\n          data\n        } = await typeApi.getAll();\n        setTypes(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getTypes();\n  }, []);\n\n  const onHandleAddType = async type => {\n    try {\n      const {\n        data\n      } = await typeApi.create(type);\n      setTypes([...types, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateType = async (id, type) => {\n    try {\n      const {\n        data\n      } = await typeApi.update(id, type);\n      setTypes([...types], data);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadTypes = async () => {\n    try {\n      const {\n        data\n      } = await typeApi.getAll();\n      setTypes(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemoveType = async id => {\n    try {\n      const {\n        data\n      } = await typeApi.remove(id);\n      const newTypes = types.filter(type => type.id !== data.id);\n      setTypes(newTypes);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {\n          data\n        } = await postApi.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getPosts();\n  }, []);\n\n  const onHandleAddPost = async post => {\n    try {\n      const {\n        data\n      } = await postApi.create(post);\n      setPosts([...posts, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdatePost = async (id, post) => {\n    try {\n      const {\n        data\n      } = await postApi.update(id, post);\n      setPosts([...posts], data);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadPosts = async () => {\n    try {\n      const {\n        data\n      } = await postApi.getAll();\n      setPosts(data.reverse());\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleRemovePost = async id => {\n    try {\n      const {\n        data\n      } = await postApi.remove(id);\n      const newPosts = posts.filter(post => post.id !== data.id);\n      setPosts(newPosts);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleAddCart = data => {\n    const product = products.find(product => product.id === data.pro_id);\n    const productCart = {\n      id: carts.length == 0 ? 1 : carts.length + 1,\n      pro_id: product.id,\n      name: product.name,\n      image: product.image,\n      price: product.price,\n      quantity: data.quantity\n    };\n    carts.push(productCart); // localStorage.setItem('carts', JSON.stringify(carts));\n  };\n\n  const onHandelUpdateCart = (id, data) => {// const localCarts = JSON.parse(localStorage.getItem('carts'));\n  };\n\n  const onHandleRemoveCart = id => {\n    // const localCarts = JSON.parse(localStorage.getItem('carts'));\n    const newCarts = carts.filter(cart => cart.id !== id); // localStorage.setItem('carts', JSON.stringify(newCarts));\n\n    setCarts(newCarts);\n  };\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"carts\");\n    setCarts(JSON.parse(data));\n  }, []);\n  useEffect(() => {\n    const getOrders = async () => {\n      try {\n        const {\n          data\n        } = await orderApi.getAll();\n        setOrders(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getOrders();\n  }, []);\n\n  const onHandleAddOrder = async order => {\n    try {\n      const {\n        data\n      } = await orderApi.create(order);\n      setOrders([...orders, data]);\n      const localCarts = JSON.parse(localStorage.getItem('carts'));\n      localCarts.forEach(cart => {\n        const dataOrder = {\n          order_id: data.id,\n          product_id: cart.pro_id,\n          // name: cart.name,\n          // image: cart.image,\n          // price: cart.price,\n          quantity: cart.quantity\n        };\n        const {\n          newData\n        } = orderDetailApi.create(dataOrder).then(() => {\n          setOrderDetails([...orderDetails, newData]);\n        });\n        setCarts([]);\n        localStorage.setItem('carts', JSON.stringify(carts));\n      });\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getOrderDetails = async () => {\n      try {\n        const {\n          data\n        } = await orderDetailApi.getAll();\n        setOrderDetails(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getOrderDetails();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCategory: onHandleRemoveCategory,\n    onAddCategory: onHandleAddCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    products: products,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: onHandleUpdateProduct,\n    types: types,\n    onRemoveType: onHandleRemoveType,\n    onAddType: onHandleAddType,\n    onUpdateType: onHandleUpdateType,\n    posts: posts,\n    onRemovePost: onHandleRemovePost,\n    onAddPost: onHandleAddPost,\n    onUpdatePost: onHandleUpdatePost,\n    carts: carts,\n    onAddCart: onHandleAddCart,\n    onUpdateCart: onHandelUpdateCart,\n    onRemoveCart: onHandleRemoveCart,\n    orders: orders,\n    onAddOrder: onHandleAddOrder,\n    orderDetails: orderDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","categoryApi","productApi","typeApi","postApi","orderApi","orderDetailApi","App","categories","setCategories","products","setProducts","types","setTypes","posts","setPosts","carts","setCarts","orders","setOrders","orderDetails","setOrderDetails","getCategories","data","getAll","error","console","log","onHandleAddCategory","category","create","onHandleUpdateCategory","id","update","loadCategories","reverse","onHandleRemoveCategory","remove","newCategories","filter","getProducts","onHandleAddProduct","product","onHandleUpdateProduct","loadProducts","onHandleRemoveProduct","newProducts","getTypes","onHandleAddType","type","onHandleUpdateType","loadTypes","onHandleRemoveType","newTypes","getPosts","onHandleAddPost","post","onHandleUpdatePost","loadPosts","onHandleRemovePost","newPosts","onHandleAddCart","find","pro_id","productCart","length","name","image","price","quantity","push","onHandelUpdateCart","onHandleRemoveCart","newCarts","cart","localStorage","getItem","JSON","parse","getOrders","onHandleAddOrder","order","localCarts","forEach","dataOrder","order_id","product_id","newData","then","setItem","stringify","getOrderDetails"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport categoryApi from './api/categoryApi'\nimport productApi from './api/productApi'\nimport typeApi from './api/typeApi'\nimport postApi from './api/postApi'\nimport orderApi from './api/orderApi'\nimport orderDetailApi from './api/orderDetailApi'\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [types, setTypes] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [carts, setCarts] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [orderDetails, setOrderDetails] = useState([]);\n\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {data} = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getCategories()\n  }, []);\n  \n  const onHandleAddCategory = async (category) => {\n    try {\n      const {data} = await categoryApi.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateCategory = async (id, category) => {\n    try {\n      const {data} = await categoryApi.update(id, category);\n      setCategories([...categories], data);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadCategories = async () => {\n    try {\n      const {data} = await categoryApi.getAll();\n      setCategories(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemoveCategory = async (id) => {\n    try {\n      const {data} = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await productApi.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateProduct = async (id, product) => {\n    try {\n      const {data} = await productApi.update(id, product);\n      setProducts([...products], data);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadProducts = async () => {\n    try {\n      const {data} = await productApi.getAll();\n      setProducts(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemoveProduct = async (id) => {\n    try {\n      const {data} = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getTypes = async () => {\n      try {\n        const {data} = await typeApi.getAll();\n        setTypes(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getTypes()\n  }, []);\n  \n  const onHandleAddType = async (type) => {\n    try {\n      const {data} = await typeApi.create(type);\n      setTypes([\n        ...types,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateType = async (id, type) => {\n    try {\n      const {data} = await typeApi.update(id, type);\n      setTypes([...types], data);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadTypes = async () => {\n    try {\n      const {data} = await typeApi.getAll();\n      setTypes(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemoveType = async (id) => {\n    try {\n      const {data} = await typeApi.remove(id);\n      const newTypes = types.filter(type => type.id !== data.id);\n      setTypes(newTypes);\n      loadTypes();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        const {data} = await postApi.getAll();\n        setPosts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getPosts()\n  }, []);\n  \n  const onHandleAddPost = async (post) => {\n    try {\n      const {data} = await postApi.create(post);\n      setPosts([\n        ...posts,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdatePost = async (id, post) => {\n    try {\n      const {data} = await postApi.update(id, post);\n      setPosts([...posts], data);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadPosts = async () => {\n    try {\n      const {data} = await postApi.getAll();\n      setPosts(data.reverse())\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleRemovePost = async (id) => {\n    try {\n      const {data} = await postApi.remove(id);\n      const newPosts = posts.filter(post => post.id !== data.id);\n      setPosts(newPosts);\n      loadPosts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleAddCart = (data) => {\n    const product = products.find(product => product.id === data.pro_id);\n    const productCart = {\n      id : carts.length == 0 ? 1 : carts.length + 1,\n      pro_id: product.id,\n      name: product.name,\n      image: product.image,\n      price: product.price,\n      quantity: data.quantity\n    }\n    carts.push(productCart);\n    // localStorage.setItem('carts', JSON.stringify(carts));\n  }\n\n  const onHandelUpdateCart = (id, data) => {\n    // const localCarts = JSON.parse(localStorage.getItem('carts'));\n  }\n\n  const onHandleRemoveCart = (id) => {\n    // const localCarts = JSON.parse(localStorage.getItem('carts'));\n    const newCarts = carts.filter(cart => cart.id !== id);\n    // localStorage.setItem('carts', JSON.stringify(newCarts));\n    setCarts(newCarts);\n  }\n\n  useEffect(() => {\n    const data = localStorage.getItem(\"carts\");\n      setCarts(JSON.parse(data));\n  }, []);\n\n  useEffect(() => {\n    const getOrders = async () => {\n      try {\n        const {data} = await orderApi.getAll();\n        setOrders(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getOrders()\n  }, []);\n\n  const onHandleAddOrder = async (order) => {\n    try {\n      const {data} = await orderApi.create(order);\n      setOrders([\n        ...orders,\n        data\n      ])\n\n      const localCarts = JSON.parse(localStorage.getItem('carts'));\n\n      localCarts.forEach((cart) => {\n        const dataOrder = {\n          order_id: data.id,\n          product_id: cart.pro_id,\n          // name: cart.name,\n          // image: cart.image,\n          // price: cart.price,\n          quantity: cart.quantity\n        }\n        const {newData} = orderDetailApi.create(dataOrder).then(\n          () => {\n            setOrderDetails([\n              ...orderDetails,\n              newData\n            ])\n          }\n        )\n        setCarts([]);\n        localStorage.setItem('carts', JSON.stringify(carts));\n      })\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getOrderDetails = async () => {\n      try {\n        const {data} = await orderDetailApi.getAll();\n        setOrderDetails(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getOrderDetails()\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Routers \n        categories={categories} \n        onRemoveCategory={onHandleRemoveCategory} \n        onAddCategory={onHandleAddCategory} \n        onUpdateCategory={onHandleUpdateCategory}\n\n        products={products}\n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={onHandleUpdateProduct}\n\n        types={types}\n        onRemoveType={onHandleRemoveType} \n        onAddType={onHandleAddType} \n        onUpdateType={onHandleUpdateType}\n\n        posts={posts}\n        onRemovePost={onHandleRemovePost} \n        onAddPost={onHandleAddPost} \n        onUpdatePost={onHandleUpdatePost}\n\n        carts={carts}\n        onAddCart={onHandleAddCart}\n        onUpdateCart={onHandelUpdateCart}\n        onRemoveCart={onHandleRemoveCart}\n\n        orders={orders}\n        onAddOrder={onHandleAddOrder}\n\n        orderDetails={orderDetails}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}