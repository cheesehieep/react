{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []);\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateCategory = updateCategory => {\n    const newCategories = categories.map(category => category.id === updateCategory.id ? updateCategory : category // Nếu category.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('categories', JSON.stringify(newCategories));\n    setCategories(newCategories);\n  };\n\n  const onHandleRemoveCategory = async id => {\n    try {\n      const {\n        data\n      } = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleGetProduct = async id => {\n    try {\n      // const {data} = await productApi.get(id);\n      const newProducts = products.filter(product => product.id == id); // setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await productApi.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateProduct = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  const onHandleRemoveProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCategory: onHandleRemoveCategory,\n    onAddCategory: onHandleAddCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    products: products,\n    onGetProduct: onHandleGetProduct,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: onHandleUpdateProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","categoryApi","productApi","App","categories","setCategories","products","setProducts","getCategories","data","getAll","error","console","log","onHandleAddCategory","category","create","onHandleUpdateCategory","updateCategory","newCategories","map","id","localStorage","setItem","JSON","stringify","onHandleRemoveCategory","remove","filter","getProducts","onHandleGetProduct","newProducts","product","onHandleAddProduct","onHandleUpdateProduct","updateProduct","onHandleRemoveProduct"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {data} = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getCategories()\n  }, []);\n  \n  const onHandleAddCategory = async (category) => {\n    try {\n      const {data} = await categoryApi.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateCategory = (updateCategory) => {\n    const newCategories = categories.map(category => (\n      category.id === updateCategory.id ? updateCategory : category  // Nếu category.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('categories', JSON.stringify(newCategories))\n    setCategories(newCategories);\n  }\n\n  const onHandleRemoveCategory = async (id) => {\n    try {\n      const {data} = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n\n  const onHandleGetProduct = async (id) => {\n    try {\n      // const {data} = await productApi.get(id);\n      const newProducts = products.filter(product => product.id == id);\n      // setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await productApi.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateProduct = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', JSON.stringify(newProducts))\n    setProducts(newProducts);\n  }\n\n  const onHandleRemoveProduct = async (id) => {\n    try {\n      const {data} = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Routers \n        categories={categories} \n        onRemoveCategory={onHandleRemoveCategory} \n        onAddCategory={onHandleAddCategory} \n        onUpdateCategory={onHandleUpdateCategory}\n\n        products={products} \n        onGetProduct={onHandleGetProduct}\n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={onHandleUpdateProduct}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}