{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {\n          data\n        } = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getCategories();\n  }, []);\n\n  const onHandleAddCategory = async category => {\n    try {\n      const {\n        data\n      } = await categoryApi.create(category);\n      setCategories([...categories, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateCategory = async (id, category) => {};\n\n  const loadCategories = async () => {\n    const result = await categoryApi.getAll();\n    setCategories(result.data.reverse());\n  };\n\n  const onHandleRemoveCategory = async id => {\n    try {\n      const {\n        data\n      } = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await productApi.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdateProduct = async (id, product) => {\n    try {\n      const {\n        data\n      } = await productApi.update(id, product);\n      setProducts([...products], data);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const loadProducts = async () => {\n    const {\n      data\n    } = await productApi.getAll();\n    setProducts(data.reverse());\n  };\n\n  const onHandleRemoveProduct = async id => {\n    try {\n      const {\n        data\n      } = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    categories: categories,\n    onRemoveCategory: onHandleRemoveCategory,\n    onAddCategory: onHandleAddCategory,\n    onUpdateCategory: onHandleUpdateCategory,\n    products: products,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: onHandleUpdateProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","categoryApi","productApi","App","categories","setCategories","products","setProducts","getCategories","data","getAll","error","console","log","onHandleAddCategory","category","create","onHandleUpdateCategory","id","loadCategories","result","reverse","onHandleRemoveCategory","remove","newCategories","filter","getProducts","onHandleAddProduct","product","onHandleUpdateProduct","update","loadProducts","onHandleRemoveProduct","newProducts"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport categoryApi from './api/categoryApi';\nimport productApi from './api/productApi';\n\nfunction App() {\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      try {\n        const {data} = await categoryApi.getAll();\n        setCategories(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getCategories()\n  }, []);\n  \n  const onHandleAddCategory = async (category) => {\n    try {\n      const {data} = await categoryApi.create(category);\n      setCategories([\n        ...categories,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateCategory = async (id, category) => {\n  }\n\n  const loadCategories = async () => {\n    const result = await categoryApi.getAll();\n    setCategories(result.data.reverse())\n  }\n\n  const onHandleRemoveCategory = async (id) => {\n    try {\n      const {data} = await categoryApi.remove(id);\n      const newCategories = categories.filter(category => category.id !== data.id);\n      setCategories(newCategories);\n      loadCategories();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await productApi.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await productApi.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdateProduct = async (id, product) => {\n    try {\n      const {data} = await productApi.update(id, product);\n      setProducts([...products], data);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const loadProducts = async () => {\n    const {data} = await productApi.getAll();\n    setProducts(data.reverse())\n  }\n\n  const onHandleRemoveProduct = async (id) => {\n    try {\n      const {data} = await productApi.remove(id);\n      const newProducts = products.filter(product => product.id !== data.id);\n      setProducts(newProducts);\n      loadProducts();\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Routers \n        categories={categories} \n        onRemoveCategory={onHandleRemoveCategory} \n        onAddCategory={onHandleAddCategory} \n        onUpdateCategory={onHandleUpdateCategory}\n\n        products={products} \n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={onHandleUpdateProduct}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}