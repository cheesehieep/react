{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\react\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Routers from './routers';\nimport apiRequest from './api/productApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {\n          data\n        } = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error);\n      }\n    };\n\n    getProducts();\n  }, []);\n\n  const onHandleAddProduct = async product => {\n    try {\n      const {\n        data\n      } = await apiRequest.create(product);\n      setProducts([...products, data]);\n    } catch (error) {\n      console.log('Failed to request API: ', error);\n    }\n  };\n\n  const onHandleUpdate = updateProduct => {\n    const newProducts = products.map(product => product.id === updateProduct.id ? updateProduct : product // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    );\n    localStorage.setItem('products', JSON.stringify(newProducts));\n    setProducts(newProducts);\n  };\n\n  const onHandleRemoveProduct = id => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routers, {\n    products: products,\n    onRemoveProduct: onHandleRemoveProduct,\n    onAddProduct: onHandleAddProduct,\n    onUpdateProduct: EditProduct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/react/src/App.js"],"names":["React","useState","useEffect","Routers","apiRequest","App","products","setProducts","getProducts","data","getAll","error","console","log","onHandleAddProduct","product","create","onHandleUpdate","updateProduct","newProducts","map","id","localStorage","setItem","JSON","stringify","onHandleRemoveProduct","filter","EditProduct"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAM;AAACC,UAAAA;AAAD,YAAS,MAAML,UAAU,CAACM,MAAX,EAArB;AACAH,QAAAA,WAAW,CAACE,IAAD,CAAX;AACD,OAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,KAPD;;AAQAH,IAAAA,WAAW;AACZ,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMM,kBAAkB,GAAG,MAAOC,OAAP,IAAmB;AAC5C,QAAI;AACF,YAAM;AAACN,QAAAA;AAAD,UAAS,MAAML,UAAU,CAACY,MAAX,CAAkBD,OAAlB,CAArB;AACAR,MAAAA,WAAW,CAAC,CACV,GAAGD,QADO,EAEVG,IAFU,CAAD,CAAX;AAID,KAND,CAME,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAvC;AACD;AACF,GAVD;;AAYA,QAAMM,cAAc,GAAIC,aAAD,IAAmB;AACxC,UAAMC,WAAW,GAAGb,QAAQ,CAACc,GAAT,CAAaL,OAAO,IACtCA,OAAO,CAACM,EAAR,KAAeH,aAAa,CAACG,EAA7B,GAAkCH,aAAlC,GAAkDH,OADZ,CACqB;AADzC,KAApB;AAGAO,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAAjC;AACAZ,IAAAA,WAAW,CAACY,WAAD,CAAX;AACD,GAND;;AAQA,QAAMO,qBAAqB,GAAIL,EAAD,IAAQ;AACpC,UAAMF,WAAW,GAAGb,QAAQ,CAACqB,MAAT,CAAgBZ,OAAO,IAAIA,OAAO,CAACM,EAAR,KAAeA,EAA1C,CAApB;AACAd,IAAAA,WAAW,CAACY,WAAD,CAAX;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEb,QADZ;AAEE,IAAA,eAAe,EAAEoB,qBAFnB;AAGE,IAAA,YAAY,EAAEZ,kBAHhB;AAIE,IAAA,eAAe,EAAEc,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;AACD,eAAevB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Routers from './routers'\nimport apiRequest from './api/productApi';\n\nfunction App() {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const {data} = await apiRequest.getAll();\n        setProducts(data);\n      } catch (error) {\n        console.log('Failed to request API: ', error)\n      }\n    }\n    getProducts()\n  }, []);\n  \n  const onHandleAddProduct = async (product) => {\n    try {\n      const {data} = await apiRequest.create(product);\n      setProducts([\n        ...products,\n        data\n      ])\n    } catch (error) {\n      console.log('Failed to request API: ', error)\n    }\n  }\n\n  const onHandleUpdate = (updateProduct) => {\n    const newProducts = products.map(product => (\n      product.id === updateProduct.id ? updateProduct : product  // Nếu product.id bằng với id của sản phẩm vừa chỉnh sửa thì trả về mảng có object mới\n    ));\n    localStorage.setItem('products', JSON.stringify(newProducts))\n    setProducts(newProducts);\n  }\n\n  const onHandleRemoveProduct = (id) => {\n    const newProducts = products.filter(product => product.id !== id);\n    setProducts(newProducts);\n  }\n  return (\n    <div className=\"App\">\n      <Routers \n        products={products} \n        onRemoveProduct={onHandleRemoveProduct} \n        onAddProduct={onHandleAddProduct} \n        onUpdateProduct={EditProduct}\n      />\n    </div>\n  )\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}